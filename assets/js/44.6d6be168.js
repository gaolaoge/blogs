(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{497:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Nginx是一种 Web服务器， 最初由一个毛子程序员，为了解决「C10K」问题而设计开发的。")]),t._v(" "),s("blockquote",[s("p",[t._v("C10K problem, 是指在一个单人程序中处理10,000个连接。"),s("br"),t._v("\n在过去，处理大量的连接请求，需要使用多线程或者其他的并发处理模型。但多线程模型在单人程序中处理大量连接时，会因为上下文切换和同步问题而效率低下。"),s("br"),t._v("\nNginx 就是为了解决这个问题而诞生的。它使用了事件驱动的非阻塞IO模型，来处理大量的连接请求。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-I")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 得到类似输出即为服务开启成功")]),t._v("\nHTTP/1.1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK\nServer: nginx/1.25.1\n")])])]),s("h2",{attrs:{id:"常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用操作"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" reload\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" stop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看版本")]),t._v("\n$ nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看安装信息，得到下面信息")]),t._v("\n$ nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-V")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("参数(Parameter)")]),t._v(" "),s("th",[t._v("说明(Description)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("--prefix=")]),t._v(" "),s("td",[t._v("指定安装目录")])]),t._v(" "),s("tr",[s("td",[t._v("--sbin-path=")]),t._v(" "),s("td",[t._v("指定Nginx可执行文件")])]),t._v(" "),s("tr",[s("td",[t._v("--conf-path=")]),t._v(" "),s("td",[t._v("指定配置文件位置")])]),t._v(" "),s("tr",[s("td",[t._v("--pid-path=")]),t._v(" "),s("td",[t._v("指定pid文件位置")])]),t._v(" "),s("tr",[s("td",[t._v("--error-log-path=")]),t._v(" "),s("td",[t._v("指定错误日志文件")])]),t._v(" "),s("tr",[s("td",[t._v("--http-log-path=")]),t._v(" "),s("td",[t._v("指定HTTP日志文件")])]),t._v(" "),s("tr",[s("td",[t._v("--user=")]),t._v(" "),s("td",[t._v("指定运行Nginx的用户")])]),t._v(" "),s("tr",[s("td",[t._v("--group=")]),t._v(" "),s("td",[t._v("指定运行Nginx的组")])]),t._v(" "),s("tr",[s("td",[t._v("--with-pcre=")]),t._v(" "),s("td",[t._v("指定PCRE库的位置")])]),t._v(" "),s("tr",[s("td",[t._v("--with-pcre-jit")]),t._v(" "),s("td",[t._v("开启PCRE的JIT(Just-in-time compilation)支持")])]),t._v(" "),s("tr",[s("td",[t._v("--with-zlib=")]),t._v(" "),s("td",[t._v("指定zlib库的位置")])])])]),t._v(" "),s("h2",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),s("p",[t._v("配置文件一般位于 "),s("code",[t._v("/etc/nginx/nginx.conf")]),t._v(" ，\n可以执行 "),s("code",[t._v("nginx -t")]),t._v(" 命令来查看配置文件位置同时检查配置文件是否合法。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打开配置文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置文件分为以下几个部分:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局块 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# events块 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http块 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server块 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location块 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"全局块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局块"}},[t._v("#")]),t._v(" 全局块")]),t._v(" "),s("p",[t._v("全局块是配置文件的主体部分，主要用来设置一些影响Nginx服务器整体运行的配置指令，"),s("br"),t._v("\n主要包括配置运行 Nginx 服务器的用户(组)、允许生成的worker process数、进程PID存放路径、日志存放路径和类型以及配置文件引入等。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定运行Nginx服务器的用户，只能在全局块配置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将user指令注释掉，或者配置成nobody的话所有用户都可以运行 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# user [user] [group]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# user nobody nobody;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" nginx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定生成的worker进程的数量，也可使用自动模式，只能在全局块配置 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误日志存放路径和类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v(" /var/log/nginx/error.log warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进程PID存放路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pid")]),t._v(" /var/run/nginx.pid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"events块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events块"}},[t._v("#")]),t._v(" events块")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定使用哪种网络IO模型，只能在events块中进行配置 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use epoll")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个worker process允许的最大连接数 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"http块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http块"}},[t._v("#")]),t._v(" http块")]),t._v(" "),s("p",[t._v("http块是配置文件的主要部分，包括http全局块和server块。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx 可以使用include指令引入其他配置文件 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" /etc/nginx/mime.types")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认类型，如果请求的URL没有包含文件类型，会使用默认类型 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application/octet-stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认类型")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启高效文件传输模式 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接超时时间 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# access_log 日志存放路径和类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 格式为:access_log <path> [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("  /var/log/nginx/access.log  main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义日志格式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v("  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local]")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n                      \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置sendfile最大传输片段大小，默认为0，表示不限制")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sendfile_max_chunk 1m;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个连接的请求次数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# keepalive_requests 100;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# keepalive超时时间 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启gzip压缩 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip on;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启gzip压缩的最小文件大小 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_min_length 1k;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip压缩级别，1-9，级别越高压缩率越高，但是消耗CPU资源也越多 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_comp_level 2;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip压缩文件类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# upstream指令用于定义一组服务器，一般用来配置反向代理和负载均衡 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" www.example.com")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash指令用于设置负载均衡的方式，ip_hash表示使用客户端的IP进行hash， 这样可以保证同一个客户端的请求每次都会分配到同一个服务器，解决了session共享的问题")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ip_hash")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight 用于设置权重，权重越高被分配到的几率越大 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.50.11:80 weight=3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.50.12:80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 192.168.50.13:80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 参考server块的配置 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"server块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server块"}},[t._v("#")]),t._v(" server块")]),t._v(" "),s("p",[t._v("server块是配置虚拟主机的，一个http块可以包含多个server块，每个server块就是一个虚拟主机。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监听IP和端口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen的格式为:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen [ip]:port [default_server] [ssl] [http2] [spdy] [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number]; ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen指令非常灵活，可以指定多个IP和端口，也可以使用通配符")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面是几个实际的例子:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 127.0.0.1:80; # 监听来自127.0.0.1的80端口的请求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 80; # 监听来自所有IP的80端口的请求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen *:80; # 监听来自所有IP的80端口的请求，同上")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 127.0.0.1; # 监听来自来自127.0.0.1的80端口，默认端口为80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name 用来指定虚拟主机的域名，可以使用精确匹配、通配符匹配和正则匹配等方式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name example.org www.example.org; # 精确匹配")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name *.example.org; # 通配符匹配 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name ~^www\\d+\\.example\\.net$; # 正则匹配 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" localhost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location块用来配置请求的路由，一个server块可以包含多个location块，每个 location块就是一个请求路由")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location块的格式是:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location [=|~|~*|^~] /uri/ { ... } ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# = 表示精确匹配，只有完全匹配上才能生效")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~ 表示区分大小写的正则匹配")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~* 表示不区分大小写的正则匹配")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ^~ 表示普通字符匹配，如果匹配成功，则不再匹配其他location # /uri/ 表示请求的URI，可以是字符串，也可以是正则表达式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# { ... } 表示location块的配置内容")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# root指令用于指定请求的根目录，可以是绝对路径，也可以是相对路径")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根目录")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index指令用于指定默认文件，如果请求的是目录，则会在目录下查找默认文件 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认文件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面是一些location的示例: ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确匹配请求")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /images/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配以/images/开头的请求 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配以gif、jpg或者jpeg结尾的请求")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" !~ \\.(gif|jpg|jpeg)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不匹配以gif、jpg或者jpeg结尾的请求 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" !~* \\.(gif|jpg|jpeg)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不匹配以gif、jpg或者jpeg结尾的请求")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# error_page 用于指定错误⻚面，可以指定多个，按照优先级从高到低依次查找 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误⻚面")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"常用模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用模块"}},[t._v("#")]),t._v(" 常用模块")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模块名(Module Name)")]),t._v(" "),s("th",[t._v("描述(Description)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("http_access_module")]),t._v(" "),s("td",[t._v("接受或者拒绝特定的客户端请求")])]),t._v(" "),s("tr",[s("td",[t._v("http_auth_basic_module")]),t._v(" "),s("td",[t._v("HTTP基本认证，使用用户名和密码来限制对资源的 访问")])]),t._v(" "),s("tr",[s("td",[t._v("http_autoindex_module")]),t._v(" "),s("td",[t._v("自动索引，用于显示目录列表")])]),t._v(" "),s("tr",[s("td",[t._v("http_browser_module")]),t._v(" "),s("td",[t._v("从 User-Agent 请求头中获取和识别客户端浏览器")])]),t._v(" "),s("tr",[s("td",[t._v("http_charset_module")]),t._v(" "),s("td",[t._v("添加特定的字符集到 Content-Type 响应头中")])]),t._v(" "),s("tr",[s("td",[t._v("http_empty_gif_module")]),t._v(" "),s("td",[t._v("返回一个1像素的透明GIF图片")])]),t._v(" "),s("tr",[s("td",[t._v("http_fastcgi_module")]),t._v(" "),s("td",[t._v("FastCGI支持")])]),t._v(" "),s("tr",[s("td",[t._v("http_geo_module")]),t._v(" "),s("td",[t._v("从IP地址中获取地理位置信息")])]),t._v(" "),s("tr",[s("td",[t._v("http_gzip_module")]),t._v(" "),s("td",[t._v("Gzip压缩支持")])]),t._v(" "),s("tr",[s("td",[t._v("http_limit_conn_module")]),t._v(" "),s("td",[t._v("限制并发连接数")])]),t._v(" "),s("tr",[s("td",[t._v("http_limit_req_module")]),t._v(" "),s("td",[t._v("限制请求速率")])]),t._v(" "),s("tr",[s("td",[t._v("http_map_module")]),t._v(" "),s("td",[t._v("从变量中获取值")])]),t._v(" "),s("tr",[s("td",[t._v("http_memcached_module")]),t._v(" "),s("td",[t._v("Memcached支持")])]),t._v(" "),s("tr",[s("td",[t._v("http_proxy_module")]),t._v(" "),s("td",[t._v("反向代理支持")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);